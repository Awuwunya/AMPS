; ===========================================================================
; ---------------------------------------------------------------------------
; Flags section. None of this is required, but I added it here to
; make it easier to debug built ROMS! If you would like easier
; assistance from Natsumi, please keep this section intact!
; ---------------------------------------------------------------------------
	dc.b "AMPS-v1.1 "		; ident str

	if FEATURE_SFX_MASTERVOL
		dc.b "SM"		; sfx ignore master volume
	endif

	if FEATURE_UNDERWATER
		dc.b "UW"		; underwater mode enabled
	endif

	if FEATURE_MODULATION
		dc.b "MO"		; modulation enabled
	endif

	if FEATURE_DACFMVOLENV
		dc.b "VE"		; FM & DAC volume envelope enabled
	endif

	if FEATURE_MODENV
		dc.b "ME"		; modulation envelope enabled
	endif

	if FEATURE_PORTAMENTO
		dc.b "PM"		; portamento enabled
	endif

	if FEATURE_BACKUP
		dc.b "BA"		; backup enabled
	endif

; ===========================================================================
; ---------------------------------------------------------------------------
; Define music and SFX
; ---------------------------------------------------------------------------

	opt oz-				; disable zero-offset optimization
	if safe=0
		nolist			; if in safe mode, list data section.
	endif

__sfx =		SFXoff
__mus =		MusOff

MusicIndex:

mus_GHZ equ	__mus
__mus =	__mus+1
		dc.l (($25)<<24)|_mus_GHZ
mus_LZ equ	__mus
__mus =	__mus+1
		dc.l (($02)<<24)|_mus_LZ
mus_MZ equ	__mus
__mus =	__mus+1
		dc.l (($02)<<24)|_mus_MZ
mus_SLZ equ	__mus
__mus =	__mus+1
		dc.l (($07)<<24)|_mus_SLZ
mus_SYZ equ	__mus
__mus =	__mus+1
		dc.l (($0C)<<24)|_mus_SYZ
mus_SBZ equ	__mus
__mus =	__mus+1
		dc.l (($20)<<24)|_mus_SBZ
mus_FZ equ	__mus
__mus =	__mus+1
		dc.l (($10)<<24)|_mus_FZ


mus_Boss equ	__mus
__mus =	__mus+1
		dc.l (($2E)<<24)|_mus_Boss
mus_SS equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_SS
mus_Invincibility equ	__mus
__mus =	__mus+1
		dc.l (($01)<<24)|_mus_Invincibility
mus_Drowning equ	__mus
__mus =	__mus+1
		dc.l (($80)<<24)|_mus_Drowning


mus_Title equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_Title
mus_GotThroughAct equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_GotThroughAct
mus_Emerald equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_Emerald
mus_ExtraLife equ	__mus
__mus =	__mus+1
		dc.l (($33)<<24)|_mus_ExtraLife


mus_GameOver equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_GameOver
mus_Continue equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_Continue
mus_Ending equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_Ending
mus_Credits equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_Credits
mus_SEGA equ	__mus
__mus =	__mus+1
		dc.l (($00)<<24)|_mus_SEGA


SoundIndex:
	
sfx_RingRight equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_RingRight
sfx_RingLeft equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_RingLeft
sfx_RingLoss equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_RingLoss
sfx_Splash equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Splash
sfx_Break equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Break

	
sfx_Jump equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Jump
sfx_Roll equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Roll
sfx_Skid equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Skid
sfx_Bubble equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Bubble
sfx_Drown equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Drown
sfx_SpikeHit equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_SpikeHit
sfx_Death equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Death

	
sfx_AirDing equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_AirDing
sfx_Register equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Register
sfx_Bonus equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Bonus
sfx_Shield equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Shield
sfx_Dash equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Dash
sfx_Signpost equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Signpost

	
sfx_Lamppost equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Lamppost
sfx_BossHit equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_BossHit
sfx_Bumper equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Bumper
sfx_Spring equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Spring

	
sfx_Collapse equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Collapse
sfx_BigRing equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_BigRing
sfx_Smash equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Smash
sfx_Switch equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Switch
sfx_Explode equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Explode

	
sfx_BuzzExplode equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_BuzzExplode
sfx_Basaran equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Basaran
sfx_Electricity equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Electricity
sfx_Flame equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Flame
sfx_LavaBall equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_LavaBall

	
sfx_SpikeMove equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_SpikeMove
sfx_Rumble equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Rumble
sfx_Door equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Door
sfx_Stomp equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Stomp
sfx_Chain equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Chain
sfx_Saw equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Saw
sfx_Lava equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Lava


	
sfx_EnterSS equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_EnterSS
sfx_Goal equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Goal
sfx_ActionBlock equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_ActionBlock
sfx_Diamonds equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Diamonds
sfx_Continue equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_Continue


; SFX with special features
	
sfx_PushBlock equ	__sfx
__sfx =	__sfx+1
		dc.l (($80)<<24)|_sfx_PushBlock


; unused SFX
	
sfx_UnkA2 equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_UnkA2
sfx_UnkAB equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_UnkAB
sfx_UnkB8 equ	__sfx
__sfx =	__sfx+1
		dc.l ((0)<<24)|_sfx_UnkB8

; ===========================================================================
; ---------------------------------------------------------------------------
; Define samples
; ---------------------------------------------------------------------------

__samp =	$80
SampleList:
	sample $0000, Stop, Stop		; 80 - Stop sample (DO NOT EDIT)
	sample $0100, Kick, Stop		; 81 - Kick
	sample $0100, Snare, Stop		; 82 - Snare
	sample $0100, Timpani, Stop, HiTimpani	; 83 - Hi Timpani
	sample $00E6, Timpani, Stop, MidTimpani	; 84 - Timpani
	sample $00C2, Timpani, Stop, LowTimpani	; 85 - Low Timpani
	sample $00B6, Timpani, Stop, FloorTimpani; 86 - Floor Timpani
	sample $0100, Sega, Stop		; 87 - SEGA screen
; ===========================================================================
; ---------------------------------------------------------------------------
; Define volume envelopes and their data
; ---------------------------------------------------------------------------

__venv =	$01
VolEnvs:
	volenv 01, 02, 03, 04, 05, 06, 07, 08
	volenv 09
VolEnvs_End:
; ---------------------------------------------------------------------------

vd01:		dc.b $00, $00, $00, $08, $08, $08, $10, $10
		dc.b $10, $18, $18, $18, $20, $20, $20, $28
		dc.b $28, $28, $30, $30, $30, $38, eHold

vd02:		dc.b $00, $10, $20, $30, $40, $7F, eHold

vd03:		dc.b $00, $00, $08, $08, $10, $10, $18, $18
		dc.b $20, $20, $28, $28, $30, $30, $38, $38
		dc.b eHold

vd04:		dc.b $00, $00, $10, $18, $20, $20, $28, $28
		dc.b $28, $30, eHold

vd05:		dc.b $00, $00, $00, $00, $00, $00, $00, $00
		dc.b $00, $00, $08, $08, $08, $08, $08, $08
		dc.b $08, $08, $08, $08, $08, $08, $08, $08
		dc.b $10, $10, $10, $10, $10, $10, $10, $10
		dc.b $18, $18, $18, $18, $18, $18, $18, $18
		dc.b $20, eHold

vd06:		dc.b $18, $18, $18, $10, $10, $10, $10, $08
		dc.b $08, $08, $00, $00, $00, $00, eHold

vd07:		dc.b $00, $00, $00, $00, $00, $00, $08, $08
		dc.b $08, $08, $08, $10, $10, $10, $10, $10
		dc.b $18, $18, $18, $20, $20, $20, $28, $28
		dc.b $28, $30, $38, eHold

vd08:		dc.b $00, $00, $00, $00, $00, $08, $08, $08
		dc.b $08, $08, $10, $10, $10, $10, $10, $10
		dc.b $18, $18, $18, $18, $18, $20, $20, $20
		dc.b $20, $20, $28, $28, $28, $28, $28, $30
		dc.b $30, $30, $30, $30, $38, $38, $38, eHold

vd09:		dc.b $00, $08, $10, $18, $20, $28, $30, $38
		dc.b $40, $48, $50, $58, $60, $68, $70, $78
		dc.b eHold
; ===========================================================================
; ---------------------------------------------------------------------------
; Define volume envelopes and their data
; ---------------------------------------------------------------------------

		even
__menv =	$01

ModEnvs:
	modenv
ModEnvs_End:
; ---------------------------------------------------------------------------

	if FEATURE_MODENV

	endif

; ===========================================================================
; ---------------------------------------------------------------------------
; Include music, sound effects and voice table
; ---------------------------------------------------------------------------

	include "driver/Voices.asm"	; include universal Voice bank
	opt ae-				; disable automatic evens

sfxaddr	
		even
_sfx_RingRight:	include "..\driver/sfx/RingRight.asm"
		even
_sfx_RingLeft:	include "..\driver/sfx/RingLeft.asm"
		even
_sfx_RingLoss:	include "..\driver/sfx/RingLoss.asm"
		even
_sfx_Splash:	include "..\driver/sfx/Splash.asm"
		even
_sfx_Break:	include "..\driver/sfx/Break.asm"
		even
_sfx_Jump:	include "..\driver/sfx/Jump.asm"
		even
_sfx_Roll:	include "..\driver/sfx/Roll.asm"
		even
_sfx_Skid:	include "..\driver/sfx/Skid.asm"
		even
_sfx_Bubble:	include "..\driver/sfx/Bubble.asm"
		even
_sfx_Drown:	include "..\driver/sfx/Drown.asm"
		even
_sfx_SpikeHit:	include "..\driver/sfx/SpikeHit.asm"
		even
_sfx_Death:	include "..\driver/sfx/Death.asm"
		even
_sfx_AirDing:	include "..\driver/sfx/AirDing.asm"
		even
_sfx_Register:	include "..\driver/sfx/Register.asm"
		even
_sfx_Bonus:	include "..\driver/sfx/Bonus.asm"
		even
_sfx_Shield:	include "..\driver/sfx/Shield.asm"
		even
_sfx_Dash:	include "..\driver/sfx/Dash.asm"
		even
_sfx_Signpost:	include "..\driver/sfx/Signpost.asm"
		even
_sfx_Lamppost:	include "..\driver/sfx/Lamppost.asm"
		even
_sfx_BossHit:	include "..\driver/sfx/BossHit.asm"
		even
_sfx_Bumper:	include "..\driver/sfx/Bumper.asm"
		even
_sfx_Spring:	include "..\driver/sfx/Spring.asm"
		even
_sfx_Collapse:	include "..\driver/sfx/Collapse.asm"
		even
_sfx_BigRing:	include "..\driver/sfx/BigRing.asm"
		even
_sfx_Smash:	include "..\driver/sfx/Smash.asm"
		even
_sfx_Switch:	include "..\driver/sfx/Switch.asm"
		even
_sfx_Explode:	include "..\driver/sfx/Explode.asm"
		even
_sfx_BuzzExplode:	include "..\driver/sfx/BuzzExplode.asm"
		even
_sfx_Basaran:	include "..\driver/sfx/Basaran.asm"
		even
_sfx_Electricity:	include "..\driver/sfx/Electricity.asm"
		even
_sfx_Flame:	include "..\driver/sfx/Flame.asm"
		even
_sfx_LavaBall:	include "..\driver/sfx/LavaBall.asm"
		even
_sfx_SpikeMove:	include "..\driver/sfx/SpikeMove.asm"
		even
_sfx_Rumble:	include "..\driver/sfx/Rumble.asm"
		even
_sfx_Door:	include "..\driver/sfx/Door.asm"
		even
_sfx_Stomp:	include "..\driver/sfx/Stomp.asm"
		even
_sfx_Chain:	include "..\driver/sfx/Chain.asm"
		even
_sfx_Saw:	include "..\driver/sfx/Saw.asm"
		even
_sfx_Lava:	include "..\driver/sfx/Lava.asm"
		even
_sfx_EnterSS:	include "..\driver/sfx/EnterSS.asm"
		even
_sfx_Goal:	include "..\driver/sfx/Goal.asm"
		even
_sfx_ActionBlock:	include "..\driver/sfx/ActionBlock.asm"
		even
_sfx_Diamonds:	include "..\driver/sfx/Diamonds.asm"
		even
_sfx_Continue:	include "..\driver/sfx/Continue.asm"
		even
_sfx_PushBlock:	include "..\driver/sfx/PushBlock.asm"
		even
_sfx_UnkA2:	include "..\driver/sfx/UnkA2.asm"
		even
_sfx_UnkAB:	include "..\driver/sfx/UnkAB.asm"
		even
_sfx_UnkB8:	include "..\driver/sfx/UnkB8.asm"
				; include all sfx
musaddr	
		even
_mus_GHZ:	include "..\driver/music/GHZ.asm"
		even
_mus_LZ:	include "..\driver/music/LZ.asm"
		even
_mus_MZ:	include "..\driver/music/MZ.asm"
		even
_mus_SLZ:	include "..\driver/music/SLZ.asm"
		even
_mus_SYZ:	include "..\driver/music/SYZ.asm"
		even
_mus_SBZ:	include "..\driver/music/SBZ.asm"
		even
_mus_FZ:	include "..\driver/music/FZ.asm"
		even
_mus_Boss:	include "..\driver/music/Boss.asm"
		even
_mus_SS:	include "..\driver/music/SS.asm"
		even
_mus_Invincibility:	include "..\driver/music/Invincibility.asm"
		even
_mus_Drowning:	include "..\driver/music/Drowning.asm"
		even
_mus_Title:	include "..\driver/music/Title.asm"
		even
_mus_GotThroughAct:	include "..\driver/music/GotThroughAct.asm"
		even
_mus_Emerald:	include "..\driver/music/Emerald.asm"
		even
_mus_ExtraLife:	include "..\driver/music/ExtraLife.asm"
		even
_mus_GameOver:	include "..\driver/music/GameOver.asm"
		even
_mus_Continue:	include "..\driver/music/Continue.asm"
		even
_mus_Ending:	include "..\driver/music/Ending.asm"
		even
_mus_Credits:	include "..\driver/music/Credits.asm"
		even
_mus_SEGA:	include "..\driver/music/SEGA.asm"
				; include all music
musend
; ===========================================================================
; ---------------------------------------------------------------------------
; Include samples and filters
; ---------------------------------------------------------------------------

		align	$8000		; must be aligned to bank... By the way, these are also set in Z80.asm. Be sure to check it out also.
fLog:		incbin "driver/filters/Logarithmic.dat"	; logarithmic filter (no filter)
;fLinear:	incbin "driver/filters/Linear.dat"	; linear filter (no filter)

dacaddr		dcb.b	Z80E_Read*(MaxPitch/$100),$00
SWF_Stop:	dcb.b	$8000-(2*Z80E_Read*(MaxPitch/$100)),$80
SWFR_Stop:	dcb.b	Z80E_Read*(MaxPitch/$100),$00

	incSWF	Kick, Timpani, Snare, Sega
	opt ae+				; enable automatic evens
	list				; continue source listing
; ===========================================================================
